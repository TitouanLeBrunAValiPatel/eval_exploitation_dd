import { useCallback } from 'react';
import { useAccountStore } from '../store';

export enum AuthState {
    unknown = 0,
    authenticated = 1,
    unauthenticated = 2,
}
export function useAuth() {
    const { account, setAccount } = useAccountStore();

    let status;

    switch (account) {
        case null:
            status = AuthState.unauthenticated;
            break;
        case undefined:
            status = AuthState.unknown;
            break;
        default:
            status = AuthState.authenticated;
            break;
    }
    //Check if the user is logged <ith acocun on the store
    const islogedIn = () => {
        return account !== null;
    }

    const authenticate = useCallback(() => {
        // let sampleAccount: Account = {
        //     id: 1,
        //     mail: 'sample@example.com',
        //     password: 'password',
        //     name: 'Sample User',
        //     surname: 'Sample Surname',
        //     gender: 'Sample Gender',
        //     city: 'Sample City',
        //     postal_code: 'Sample Postal Code',
        //     // Add other required properties here
        // };
        setAccount(islogedIn() ? account : null);
    }, [setAccount]);

    const login = useCallback((mail: string, password: string) => {
        fetch('http://localhost:8080/api/auth', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ mail, password }),
        })
            .then(response => response.json())
            .then(data => {
                if (data.id) {
                    setAccount(data);
                }
                else {
                    setAccount(null);
                }
            })
            .catch(() => {
                setAccount(null);
            });

    }
        , [setAccount]);

    const logout = useCallback(() => {
        setAccount(null);
    }
        , [setAccount]);


    return { account, status, authenticate, login, logout };
}
