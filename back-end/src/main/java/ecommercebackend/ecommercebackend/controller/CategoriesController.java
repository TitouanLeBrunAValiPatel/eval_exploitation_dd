package ecommercebackend.ecommercebackend.controller;

import ecommercebackend.ecommercebackend.dto.CategoryDTO;
import ecommercebackend.ecommercebackend.service.CategoryService;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api")
@RequiredArgsConstructor
public class CategoriesController implements CrudController<CategoryDTO> {

    private final CategoryService categoryService;

    @GetMapping("/categories")
    @Override
    public List<CategoryDTO> findAllItem() {
        return categoryService.getAllItem();
    }

    @GetMapping("/categories/{id}")
    @Override
    public CategoryDTO findItemById(@PathVariable("id") int id) throws Exception {
        return categoryService.getItemById(id);
    }

    @PostMapping("/categories")
    @Override
    public CategoryDTO createItem(@RequestBody CategoryDTO item) {
        return categoryService.addItem(item);
    }

    @DeleteMapping("/categories/{id}")
    @Override
    public void removeItemById(@PathVariable("id") int id) {
        categoryService.deleteItemById(id);
    }

    @PutMapping("/categories")
    @Override
    public CategoryDTO updateItem(@RequestBody CategoryDTO item) {
        return categoryService.updateItem(item);
    }
}
