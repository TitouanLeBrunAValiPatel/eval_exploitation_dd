package ecommercebackend.ecommercebackend.controller;

import ecommercebackend.ecommercebackend.dto.ProductDTO;
import ecommercebackend.ecommercebackend.service.ProductService;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api")
@RequiredArgsConstructor
public class ProductsController implements CrudController<ProductDTO> {

    private final ProductService productService;

    //todo enlever override pour list
    @GetMapping("/products")
    @Override
    public List<ProductDTO> findAllItem() {
        return productService.getAllItem();
    }

    @GetMapping("/products/categories/{categoryId}")
    public List<ProductDTO> findAllItemByProductId(@PathVariable("categoryId") int categoryId) throws Exception {
        return productService.getAllItemByCategoryId(categoryId);
    }

    @GetMapping("/products/{id}")
    @Override
    public ProductDTO findItemById(@PathVariable("id") int id) {
        return productService.getItemById(id);
    }

    @PostMapping("/products")
    @Override
    public ProductDTO createItem(@RequestBody ProductDTO item) {
        return productService.addItem(item);
    }

    @DeleteMapping("/products/{id}")
    @Override
    public void removeItemById(@PathVariable("id") int id) {
        productService.deleteItemById(id);
    }

    @PutMapping("/products")
    @Override
    public ProductDTO updateItem(@RequestBody ProductDTO item) {
        return productService.updateItem(item);
    }
}
