package ecommercebackend.ecommercebackend.controller;

import ecommercebackend.ecommercebackend.dto.ColorDTO;
import ecommercebackend.ecommercebackend.exception.InvalidIdException;
import ecommercebackend.ecommercebackend.exception.NotfoundException;
import ecommercebackend.ecommercebackend.service.ColorService;
import lombok.RequiredArgsConstructor;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api")
@RequiredArgsConstructor
public class ColorsController implements CrudController<ColorDTO> {

    private final ColorService colorService;

    @GetMapping("/colors")
    @Override
    public List<ColorDTO> findAllItem() {
        return colorService.getAllItem();
    }

    @GetMapping("/colors/{id}")
    @Override
    public ColorDTO findItemById(@PathVariable("id") int id) throws InvalidIdException, NotfoundException {
        return colorService.getItemById(id);
    }

    @PostMapping("/colors")
    @Override
    public ColorDTO createItem(@RequestBody ColorDTO item) {
        return colorService.addItem(item);
    }

    @DeleteMapping("/colors/{id}")
    @Override
    public void removeItemById(@PathVariable("id") int id) {
        colorService.deleteItemById(id);
    }

    @PutMapping("/colors")
    @Override
    public ColorDTO updateItem(@RequestBody ColorDTO item) {
        return colorService.updateItem(item);
    }
}
