package ecommercebackend.ecommercebackend.dto.mapper;

import ecommercebackend.ecommercebackend.data.entity.database.*;
import ecommercebackend.ecommercebackend.dto.*;
import ecommercebackend.ecommercebackend.dto.product.OrderProductDTO;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;

import java.util.List;

@Mapper(componentModel = "spring")
public interface MapstructMapper {

    CardDTO cardToCardDTO(Card card);

    Card cardDTOToCard(CardDTO card);

    List<CardDTO> cardToCardDTO(List<Card> card);

    @Mapping(target = "cardDTOS", source = "cards")
    @Mapping(target = "roleDTOS", source = "roles")
    UserDTO userToUserDTO(User user, List<RoleDTO> roles, List<CardDTO> cards);

    User userDTOtoUser(UserDTO userDTO);

    @Mapping(target = "cardDTOS", ignore = true)
    @Mapping(target = "roleDTOS", ignore = true)
    List<UserDTO> userToUserDTO(List<User> users);

    RoleDTO roleToRoleDTO(Role role);

    List<RoleDTO> roleToRoleDTO(List<Role> role);

    Role rolDtoToRole(RoleDTO role);

    @Mapping(target = "orderProductDTOS", source = "orderProductDTOS")
    @Mapping(target = "numberTotalQuantity", source = "numberTotalQuantity")
    @Mapping(target = "totalPrice", source = "totalPrice")
    @Mapping(target = "cardDTO", source = "order.card")
    OrderDTO orderToOrderDTO(Order order, List<OrderProductDTO> orderProductDTOS, int numberTotalQuantity, float totalPrice);

    List<OrderDTO> orderToOrderDTO(List<Order> order);

    Order orderDTOToOrder(OrderDTO order);

    @Mapping(target = "product", ignore = true)
    ImageDTO imageToImageDTO(Image image);

    @Mapping(target = "product", ignore = true)
    List<ImageDTO> imageToImageDTO(List<Image> image);

    @Mapping(target = "product", ignore = true)
    Image imageDTOToImage(ImageDTO image);

    @Mapping(target = "product", ignore = true)
    List<Image> imageDTOToImage(List<ImageDTO> image);

    ColorDTO colorToColorDTO(Color color);

    List<ColorDTO> colorToColorDTO(List<Color> color);

    Color colorDTOtoColor(ColorDTO color);

    @Mapping(target = "parentCategory", ignore = true)
    CategoryDTO categoryToCategoryDTO(Category category);

    List<CategoryDTO> categoryToCategoryDTO(List<Category> category);

    @Mapping(target = "parentCategory", ignore = true)
    Category categoryDTotoCategory(CategoryDTO category);


}
