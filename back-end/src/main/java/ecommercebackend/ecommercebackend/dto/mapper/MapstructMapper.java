package ecommercebackend.ecommercebackend.dto.mapper;

import ecommercebackend.ecommercebackend.data.entity.database.*;
import ecommercebackend.ecommercebackend.dto.*;
import ecommercebackend.ecommercebackend.dto.product.ProductDTO;
import net.bytebuddy.implementation.bind.annotation.Default;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.NullValueCheckStrategy;
import org.mapstruct.factory.Mappers;

import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

@Mapper(componentModel = "spring", nullValueCheckStrategy = NullValueCheckStrategy.ALWAYS)
public interface MapstructMapper {
    MapstructMapper INSTANCE = Mappers.getMapper(MapstructMapper.class);

    @Mapping(target = "postCode", source = "postCode")
    UserDTO userToUserDTO(User user);

    List<UserDTO> usersToUserDTOs(List<User> users);

//    default List<ProductDTO> mapToProductDTOs(Set<FavoriteProduct> favoriteProducts) {
//        return favoriteProducts.stream()
//                .map(this::mapToProductDTO)
//                .collect(Collectors.toList());
//    }

}
