package ecommercebackend.ecommercebackend.dto.mapper;

import ecommercebackend.ecommercebackend.data.entity.database.Card;
import ecommercebackend.ecommercebackend.data.entity.database.Role;
import ecommercebackend.ecommercebackend.data.entity.database.User;
import ecommercebackend.ecommercebackend.dto.CardDTO;
import ecommercebackend.ecommercebackend.dto.RoleDTO;
import ecommercebackend.ecommercebackend.dto.UserDTO;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;

import java.util.List;

@Mapper(componentModel = "spring")
public interface MapstructMapper {

    CardDTO cardToCardDTO(Card card);

    Card cardDTOToCard(CardDTO card);

    List<CardDTO> cardToCardDTO(List<Card> card);

    @Mapping(target = "cardDTOS", source = "cards")
    @Mapping(target = "roleDTOS", source = "roles")
    UserDTO userToUserDTO(User user, List<RoleDTO> roles, List<CardDTO> cards);

    User userDTOtoUser(UserDTO userDTO);

    @Mapping(target = "cardDTOS", ignore = true)
    @Mapping(target = "roleDTOS", ignore = true)
    List<UserDTO> userToUserDTO(List<User> users);

    RoleDTO roleToRoleDTO(Role role);

    List<RoleDTO> roleToRoleDTO(List<Role> role);

    Role rolDtoToRole(RoleDTO role);


}
