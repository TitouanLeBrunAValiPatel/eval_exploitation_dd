package ecommercebackend.ecommercebackend.dto.mapper;

import ecommercebackend.ecommercebackend.data.entity.database.*;
import ecommercebackend.ecommercebackend.dto.*;
import ecommercebackend.ecommercebackend.dto.product.OrderAndCartProductDTO;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.NullValueCheckStrategy;
import org.mapstruct.factory.Mappers;

import java.util.List;

@Mapper(componentModel = "spring", nullValueCheckStrategy = NullValueCheckStrategy.ALWAYS)
public interface MapstructMapper {
    MapstructMapper INSTANCE = Mappers.getMapper(MapstructMapper.class);


    @Mapping(target = "userDTO", source = "user")
    CardDTO cardToCardDTO(Card card);

    @Mapping(target = "user", source = "userDTO")
    Card cardDTOToCard(CardDTO card);

    @Mapping(target = "userDTO", source = "user")
    List<CardDTO> cardToCardDTO(List<Card> card);

    @Mapping(target = "cardDTOS", source = "cards")
    @Mapping(target = "roleDTOS", source = "roles")
    UserDTO userToUserDTO(User user, List<RoleDTO> roles, List<CardDTO> cards);

    @Mapping(target = "password", ignore = true)
    @Mapping(target = "cardDTOS", ignore = true)
    @Mapping(target = "roleDTOS", ignore = true)
    UserDTO userToUserDTO(User user);

    @Mapping(target = "cardDTOS", ignore = true)
    @Mapping(target = "roleDTOS", ignore = true)
    List<UserDTO> userToUserDTO(List<User> users);

    User userDTOToUser(UserDTO userDTO);

    RoleDTO roleToRoleDTO(Role role);

    List<RoleDTO> roleToRoleDTO(List<Role> role);

    Role rolDtoToRole(RoleDTO role);

    @Mapping(target = "orderAndCartProductDTOS", source = "orderAndCartProductDTOS")
    @Mapping(target = "numberTotalQuantity", source = "numberTotalQuantity")
    @Mapping(target = "numberOfArticle", source = "numberOfArticle")
    @Mapping(target = "totalPrice", source = "totalPrice")
    @Mapping(target = "cardDTO", source = "order.card")
    @Mapping(target = "userDTO", ignore = true)
    OrderDTO orderToOrderDTO(Order order, List<OrderAndCartProductDTO> orderAndCartProductDTOS, int numberTotalQuantity, float totalPrice, int numberOfArticle);

    @Mapping(target = "userDTO", ignore = true)
    List<OrderDTO> orderToOrderDTO(List<Order> order);

    @Mapping(target = "user", source = "userDTO")
    @Mapping(target = "card", source = "cardDTO")
    Order orderDTOToOrder(OrderDTO order);

    @Mapping(target = "productDTO", ignore = true)
    ImageDTO imageToImageDTO(Image image);

    @Mapping(target = "productDTO", ignore = true)
    List<ImageDTO> imageToImageDTO(List<Image> image);

    @Mapping(target = "product", ignore = true)
    Image imageDTOToImage(ImageDTO image);

    @Mapping(target = "product", ignore = true)
    List<Image> imageDTOToImage(List<ImageDTO> image);

    ColorDTO colorToColorDTO(Color color);

    List<ColorDTO> colorToColorDTO(List<Color> color);

    @Mapping(target = "id", ignore = true)
    Color colorDTOtoColor(ColorDTO color);

    @Mapping(target = "parentCategory", ignore = true)
    CategoryDTO categoryToCategoryDTO(Category category);

    List<CategoryDTO> categoryToCategoryDTO(List<Category> category);

    @Mapping(target = "parentCategory", ignore = true)
    Category categoryDTotoCategory(CategoryDTO category);

    @Mapping(target = "userDTO", source = "userDTO")
    @Mapping(target = "productDTO", ignore = true)
    @Mapping(target = "id", source = "rating.id")
    RatingDTO ratingToRatingDTO(Rating rating, UserDTO userDTO);

    List<RatingDTO> ratingToRatingDTO(List<Rating> rating);

    @Mapping(target = "user", source = "userDTO")
    @Mapping(target = "product", source = "productDTO")
    Rating ratingDTOToRating(RatingDTO rating);

    @Mapping(target = "user", source = "userDTO")
    Cart cartDTOToCart(CartDTO cart);

    @Mapping(target = "totalPrice", source = "totalPrice")
    @Mapping(target = "orderAndCartProductDTOS", source = "orderAndCartProductDTOS")
    @Mapping(target = "id", ignore = true)
    @Mapping(target = "userDTO", ignore = true)
    CartDTO cartToCartDTO(Cart cart, List<OrderAndCartProductDTO> orderAndCartProductDTOS, float totalPrice);

    @Mapping(target = "userDTO", source = "user")
    CartDTO cartToCartDTO(Cart cart);

    @Mapping(target = "user", source = "userDTO")
    List<CartDTO> cartDTOToCart(List<Cart> cart);


    List<FavoriteProductDTO> favoriteProductToFavoriteProductDTO(List<FavoriteProduct> cart);

    FavoriteProductDTO favoriteProductToFavoriteProductDTO(FavoriteProduct cart);

    FavoriteProduct favoriteProductDTOToFavoriteProduct(FavoriteProductDTO cart);


}
