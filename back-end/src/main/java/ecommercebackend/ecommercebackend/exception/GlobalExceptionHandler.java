package ecommercebackend.ecommercebackend.exception;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

@RestControllerAdvice
public class GlobalExceptionHandler {

    @ExceptionHandler(Exception.class)
    public ResponseEntity<ErrorResponse> handleInvalidIdOrCredentialException(Exception ex) {
        ErrorResponse errorResponse;
        HttpStatus status = switch (ex) {
            case InvalidIdException invalidIdException -> HttpStatus.BAD_REQUEST;
            case MissingFieldException missingFieldException -> HttpStatus.BAD_REQUEST;
            case InvalidCredentialException invalidCredentialException -> HttpStatus.UNAUTHORIZED;
            case NotfoundException notfoundException -> HttpStatus.NOT_FOUND;
            case null, default ->
                    HttpStatus.INTERNAL_SERVER_ERROR; // Définissez un code d'état approprié pour les autres exceptions non gérées.
        };

        errorResponse = new ErrorResponse(status.value(), ex.getMessage());
        return ResponseEntity.status(status).body(errorResponse);
    }
}
