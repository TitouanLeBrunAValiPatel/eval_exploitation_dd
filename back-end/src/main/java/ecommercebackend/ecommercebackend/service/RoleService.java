package ecommercebackend.ecommercebackend.service;

import ecommercebackend.ecommercebackend.data.entity.database.Category;
import ecommercebackend.ecommercebackend.data.entity.database.Role;
import ecommercebackend.ecommercebackend.data.repository.RoleRepository;
import ecommercebackend.ecommercebackend.dto.RoleDTO;
import ecommercebackend.ecommercebackend.dto.mapper.MapstructMapper;
import ecommercebackend.ecommercebackend.exception.InvalidIdException;
import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
@RequiredArgsConstructor
public class RoleService implements CrudService<RoleDTO> {
    private final RoleRepository roleRepository;

    @Override
    public List<RoleDTO> getAllItem() {
        return MapstructMapper.INSTANCE.roleToRoleDTO(roleRepository.findAll());
    }

    @Override
    public RoleDTO getItemById(int id) throws InvalidIdException {
        RoleDTO roleDTO = MapstructMapper.INSTANCE.roleToRoleDTO(roleRepository.findById(id));
        if (roleDTO == null) {
            throw new InvalidIdException(Role.class, id);
        }
        return roleDTO;
    }

    @Override
    public RoleDTO addItem(RoleDTO item) {
        roleRepository.save(MapstructMapper.INSTANCE.rolDtoToRole(item));
        return item;
    }

    @Override
    public void deleteItemById(int id) {
        roleRepository.deleteById(id);
    }

    @Override
    public RoleDTO updateItem(RoleDTO item) {
        roleRepository.save(MapstructMapper.INSTANCE.rolDtoToRole(item));
        return item;
    }


}
